indexer
{
    mem_limit = 512M
}

searchd
{
    # [hostname:]port[:protocol], or /unix/socket/path to listen on
    # known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
    #
    # multi-value, multiple listen points are allowed
    # optional, defaults are 9312:sphinx and 9306:mysql41, as below
    #
    # listen            = 127.0.0.1
    # listen            = 192.168.0.1:9312
    # listen            = 9312
    # listen            = /var/run/searchd.sock
    listen = 9306:mysql41

    # client read timeout, seconds
    # optional, default is 5
    read_timeout = 5

    # request timeout, seconds
    # optional, default is 5 minutes
    client_timeout = 300

    # maximum amount of children to fork (concurrent searches to run)
    # optional, default is 0 (unlimited)
    max_children = 30

    # PID file, searchd process ID file name
    # mandatory
    pid_file = /var/run/sphinx/searchd.pid

    # seamless rotate, prevents rotate stalls if precaching huge datasets
    # optional, default is 1
    seamless_rotate = 1

    # whether to forcibly preopen all indexes on startup
    # optional, default is 1 (preopen everything)
    preopen_indexes = 1

    # whether to unlink .old index copies on succesful rotation.
    # optional, default is 1 (do unlink)
    unlink_old = 1

    # MVA updates pool size
    # shared between all instances of searchd, disables attr flushes!
    # optional, default size is 1M
    mva_updates_pool = 1M

    # max allowed network packet size
    # limits both query packets from clients, and responses from agents
    # optional, default size is 8M
    max_packet_size = 8M

    # max allowed per-query filter count
    # optional, default is 256
    max_filters = 256

    # max allowed per-filter values count
    # optional, default is 4096
    max_filter_values = 4096

    # max allowed per-batch query count (aka multi-query count)
    # optional, default is 32
    max_batch_queries = 32

    # multi-processing mode (MPM)
    # known values are none, fork, prefork, and threads
    # optional, default is fork
    #
    workers = threads # for RT to work
}

source news_documents
{
    type = xmlpipe2

    xmlpipe_command = /usr/local/bin/get-documents

    xmlpipe_attr_string = doc_id
    xmlpipe_field_string = title
    xmlpipe_field_string = text
    xmlpipe_field_string = description
}

index news_documents
{
    source = news_documents

    path = /var/lib/sphinx/idx/news_documents

    # document attribute values (docinfo) storage mode
    # optional, default is 'extern'
    # known values are 'none', 'extern' and 'inline'
    docinfo = extern

    # memory locking for cached data (.spa and .spi), to prevent swapping
    # optional, default is 0 (do not mlock)
    # requires searchd to be run from root
    mlock = 0

    # a list of morphology preprocessors to apply
    # optional, default is empty
    #
    # builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
    # 'soundex', and 'metaphone'; additional preprocessors available from
    # libstemmer are 'libstemmer_XXX', where XXX is algorithm code
    # (see libstemmer_c/libstemmer/modules.txt)
    #
    # morphology        = stem_en, stem_ru, soundex
    # morphology        = libstemmer_german
    # morphology        = libstemmer_sv
    morphology = stem_enru

    min_word_len = 1
    html_strip = 1
}
