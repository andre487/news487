#@IgnoreInspection BashAddShebang
if [[ "$DEVTOOLS_DEBUG" == 1 ]]; then
    set -x
fi

log() {
    level="$1"
    msg="$2"

    time="$(date +"%Y-%m-%d %T")"

    printf "$time\t$level\t$msg\n" > /dev/stderr
}

log_error() {
    log ERROR "$1"
}

log_info() {
    log INFO "$1"
}

get_env() {
    var_name="$1"
    value="${!var_name}"

    if [[ -z "$value" ]]; then
        log_error "Variable $var_name is not defined"
        exit 1
    fi

    echo "$value"
}

run_method() {
    method_name="$1"
    shift
    if [[ $# > 0 ]]; then
        shift # Skip project dir
        arguments="$@"
    fi

    set +e
    type "$method_name" &> /dev/null
    method_exists=$?
    set -e

    if [[ "$method_exists" != 0 ]]; then
        log_error "You should define function \`$method_name\` in $PARAMS_FILE"
        exit 1
    fi

    log_info "Running method \`$method_name\` with arguments \`$arguments\`"
    "$method_name" "$arguments"
}

if [[ -z "$1" ]]; then
    log_error "You should pass project directory as first argument"
    exit 1
fi

PROJECT_DIR="$(cd "$1" && pwd)"
DEVTOOLS_PARAMS_DIR="$PROJECT_DIR/.devtools"
PARAMS_FILE="$DEVTOOLS_PARAMS_DIR/params"

export PYTHONPATH="$PROJECT_DIR/../common/python:$PYTHONPATH"

if [[ ! -d "$PROJECT_DIR" ]]; then
    log_error "Directory $PROJECT_DIR does not exist"
    exit 1
fi

if [[ ! -f "$PARAMS_FILE" ]]; then
    log_error "File $PARAMS_FILE does not exist"
    exit 1
fi

log_info "Working with params $PARAMS_FILE"
source "$PARAMS_FILE"
